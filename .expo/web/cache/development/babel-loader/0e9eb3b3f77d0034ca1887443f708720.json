{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/tim/Desktop/voice-conversion-frontend/components/VoiceCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Card, Title, Avatar, Button } from 'react-native-paper';\nimport classNames from \"classnames\";\nexport default function VoiceCard(props) {\n  var name = props.name,\n      image = props.image,\n      style = props.style,\n      onUseVoice = props.onUseVoice;\n  return React.createElement(Card, {\n    style: _objectSpread(_objectSpread({}, styles.card), style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.cardInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: {\n      borderRadius: 4,\n      height: 120,\n      width: 120\n    },\n    source: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      marginLeft: 16,\n      flex: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, name), React.createElement(View, {\n    style: {\n      marginTop: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      onUseVoice(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Use Voice\")))));\n}\nvar styles = StyleSheet.create({\n  card: {\n    width: Dimensions.get('window').width - 32,\n    elevation: 1,\n    padding: 8\n  },\n  cardInner: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["/home/tim/Desktop/voice-conversion-frontend/components/VoiceCard.js"],"names":["React","Card","Title","Avatar","Button","classNames","VoiceCard","props","name","image","style","onUseVoice","styles","card","cardInner","borderRadius","height","width","marginLeft","flex","marginTop","StyleSheet","create","Dimensions","get","elevation","padding","display","flexDirection"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,MAJF,QAKO,oBALP;AAMA,OAAOC,UAAP,MAAwB,YAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,MAAOC,IAAP,GAAyCD,KAAzC,CAAOC,IAAP;AAAA,MAAaC,KAAb,GAAyCF,KAAzC,CAAaE,KAAb;AAAA,MAAoBC,KAApB,GAAyCH,KAAzC,CAAoBG,KAApB;AAAA,MAA2BC,UAA3B,GAAyCJ,KAAzC,CAA2BI,UAA3B;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAMC,MAAM,CAACC,IAAb,GAAsBH,KAAtB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAE,CAAf;AAAkBC,MAAAA,MAAM,EAAE,GAA1B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAAd;AAA2D,IAAA,MAAM,EAAER,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACS,MAAAA,UAAU,EAAE,EAAb;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQX,IAAR,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAE,mBAAM;AACrCT,MAAAA,UAAU,CAACH,IAAD,CAAV;AAAkB,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFF,CAFF,CADF,CADF;AAeD;AAGD,IAAMI,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAEM,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBP,KAAzB,GAAiC,EADpC;AAEJQ,IAAAA,SAAS,EAAE,CAFP;AAGJC,IAAAA,OAAO,EAAE;AAHL,GADyB;AAM/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE;AAFN;AANoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Image, View, Dimensions } from 'react-native';\nimport { \n  Card,\n  Title,\n  Avatar,\n  Button,\n} from 'react-native-paper';\nimport classNames  from \"classnames\";\n\nexport default function VoiceCard(props) {\n  const {name, image, style, onUseVoice} = props;\n  return ( \n    <Card style={{...styles.card, ...style}}>\n      <View style={styles.cardInner}>\n        <Image style={{borderRadius: 4, height: 120, width: 120 }} source={image} />\n        <View style={{marginLeft: 16, flex: 10}}>\n          <Title>{name}</Title>\n          <View style={{marginTop: \"auto\"}}>\n            <Button mode=\"outlined\" onPress={() => {\n              onUseVoice(name) }\n            }>Use Voice</Button>\n          </View>\n        </View>\n      </View>\n    </Card>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  card: { \n    width: Dimensions.get('window').width - 32,\n    elevation: 1,\n    padding: 8\n  },\n  cardInner: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}